import a from"express";import d from"ably";import{uniqueNamesGenerator as f,colors as m,adjectives as h,animals as p}from"unique-names-generator";const u=async(e,o)=>{const r=f({dictionaries:[m,h,p]}),t=await d.Rest.Promise("fqOR-g.vL1AEQ:YqB33ug_1Eh1Wanqr2PG4B1qzPPtr78bc_h2ikhISaw").auth.createTokenRequest({clientId:r});return console.log(`Request: ${JSON.stringify(t)}`),o.json(t)},b=e=>{e.use(a.json()),e.use(a.urlencoded({extended:!0}))},y=e=>{e.use((o,r,l,t)=>{if(o instanceof Error)return l.status(403).json({error:o.message});t(o)})},q=(e,o)=>e,i=[void 0,u&&{source:"api/ably/token.js?fn=GET",method:"get",route:"/ably/token",path:"/api/ably/token",url:"/htmx-full-demo/api/ably/token",cb:u},void 0,void 0,void 0,void 0].filter(e=>e);i.map(e=>e.method?.toUpperCase()+"	"+e.url);const R=e=>{i.forEach(o=>{o.cb=q?.(o.cb)||o.cb,e(o)})},s=a();R(e=>{const{method:o,route:r,path:l,cb:t}=e;s[o]?Array.isArray(t)?s[o](r,...t):s[o](r,t):console.log("Not Support",o,"for",r,"in",s)});const n=a();b?.(n);const{PORT:c=3e3,PUBLIC_DIR:g=".."}=process.env;n.use("/htmx-full-demo/",a.static(g));n.use("/htmx-full-demo/api",s);y?.(n);n.on("error",e=>{console.error(`Error at http://localhost:${c}/htmx-full-demo/`,e)});n.listen(c,()=>{console.log(`Ready at http://localhost:${c}/htmx-full-demo/`)});
